{"./":{"url":"./","title":"Introduction","keywords":"","body":"Introduction This is a notebook of mine based on GitBook/Github Pages. Thanks Rich Yap for his great guide. "},"network/":{"url":"network/","title":"Network","keywords":"","body":"Network "},"network/tlsssl.html":{"url":"network/tlsssl.html","title":"TLS/SSL","keywords":"","body":"TLS/SSL "},"network/how_to_self-sign_tlsssl_certificates_using_openssl.html":{"url":"network/how_to_self-sign_tlsssl_certificates_using_openssl.html","title":"How to self-sign TLS/SSL certificates using OpenSSL","keywords":"","body":"How to self-sign TLS/SSL certificates using OpenSSL Generate CA private and public keys $ openssl genrsa -aes256 -out ca-key.pem 4096 Generating RSA private key, 4096 bit long modulus ............................................................................................................................................................................................++ ........++ e is 65537 (0x10001) Enter pass phrase for ca-key.pem: Verifying - Enter pass phrase for ca-key.pem: $ openssl req -new -x509 -days 365 -key ca-key.pem -sha256 -out ca.pem Enter pass phrase for ca-key.pem: You are about to be asked to enter information that will be incorporated into your certificate request. What you are about to enter is what is called a Distinguished Name or a DN. There are quite a few fields but you can leave some blank For some fields there will be a default value, If you enter '.', the field will be left blank. ----- Country Name (2 letter code) [AU]: State or Province Name (full name) [Some-State]:Queensland Locality Name (eg, city) []:Brisbane Organization Name (eg, company) [Internet Widgits Pty Ltd]:Docker Inc Organizational Unit Name (eg, section) []:Sales Common Name (e.g. server FQDN or YOUR name) []:$HOST Email Address []:Sven@home.org.au Generate server private and public keys Generate server private key and certificate signing request (CSR) $ openssl genrsa -out server-key.pem 4096 Generating RSA private key, 4096 bit long modulus .....................................................................++ .................................................................................................++ e is 65537 (0x10001) $ openssl req -subj \"/CN=$HOST\" -sha256 -new -key server-key.pem -out server.csr Generate SSL extensions (SANs, keyUsage) $ echo subjectAltName = DNS:$HOST,IP:10.10.10.20,IP:127.0.0.1 >> extfile.cnf $ echo extendedKeyUsage = serverAuth >> extfile.cnf If the certificate will be used as a client certificate, SANs is not necessary and extendedKeyUsage should be clientAuth Sign certificate $ openssl x509 -req -days 3650 -sha256 -in server.csr -CA ca.pem -CAkey ca-key.pem \\ -CAcreateserial -out server-cert.pem -extfile extfile.cnf Signature ok subject=/CN=client Getting CA Private Key Enter pass phrase for ca-key.pem: Generate client private and public keys $ openssl genrsa -out key.pem 4096 Generating RSA private key, 4096 bit long modulus .........................................................++ ................++ e is 65537 (0x10001) $ openssl req -subj '/CN=client' -new -key key.pem -out client.csr $ echo extendedKeyUsage = clientAuth > extfile-client.cnf $ openssl x509 -req -days 3650 -sha256 -in client.csr -CA ca.pem -CAkey ca-key.pem \\ -CAcreateserial -out cert.pem -extfile extfile-client.cnf Signature ok subject=/CN=client Getting CA Private Key Enter pass phrase for ca-key.pem: Change privileges for security Public keys (certificates) can be world-readable, while private keys should be read-only by the creator. $ chmod -v 0400 ca-key.pem key.pem server-key.pem $ chmod -v 0444 ca.pem server-cert.pem cert.pem "},"network/curl.html":{"url":"network/curl.html","title":"cURL","keywords":"","body":"cURL Reference Download A File Default To STDOUT $ curl http://www.centos.org 301 Moved Permanently 301 Moved Permanently nginx/1.12.2 Redirect To A File/A Pipe $ curl http://www.centos.org > centos.html % Total % Received % Xferd Average Speed Time Time Time Current Dload Upload Total Spent Left Speed 100 185 100 185 0 0 333 0 --:--:-- --:--:-- --:--:-- 335 $ cat centos.html 301 Moved Permanently 301 Moved Permanently nginx/1.12.2 Specify Target File Name Save downloaded content to a specific file by using -o/-O -o：specify a file name -O：use default file name $ curl -o mygettext.html http://www.gnu.org/software/gettext/manual/gettext.html $ curl -O http://www.gnu.org/software/gettext/manual/gettext.html Download Multiple Files curl -O URL1 -O URL2 If CURL is going to download multiple files from one single site, it will try to reuse the connection. Handle HTTP Redirection By default, CURL will not follow HTTP Location header. Use -L to follow HTTP Location Header $ curl http://www.google.com 302 Moved 302 Moved The document has moved here. $ curl -L http://www.google.com Continue from Breakpoint Use -C to continue/resume the download of a large file . $ curl -O http://www.gnu.org/software/gettext/manual/gettext.html ############## 20.1% $ curl -C - -O http://www.gnu.org/software/gettext/manual/gettext.html ############### 21.1% Limit Download Bandwidth Use --limit-rate to limit the max bandwidth that CURL can occupy. # Max downloading rate: 1000B/s $ curl --limit-rate 1000B -O http://www.gnu.org/software/gettext/manual/gettext.html Download A File Only If Updated Use -z to download a file updated with specific time. # Download yy.html if it was update after Dec 21, 2011. $ curl -z 21-Dec-11 http://www.example.com/yy.html # Download yy.html if it was update before Dec 21, 2011. $ curl -z -21-Dec-11 http://www.example.com/yy.html Authorization Use -u to provide username and password. $ curl -u username:password URL # A safer practice is to type the usename in the command line and then to type the password in the prompt. It can avoid leaks of passwords by look up the command history. $ curl -u username URL FTP Download files from FTP Services # List all files and folders under public_html $ curl -u ftpuser:ftppass -O ftp://ftp_server/public_html/ # Download xss.php curl -u ftpuser:ftppass -O ftp://ftp_server/public_html/xss.php Upload files to FTP Services Use -T to upload specific local files to FTP services. # Upload myfile.txt $ curl -u ftpuser:ftppass -T myfile.txt ftp://ftp.testserver.com # Upload multiple files curl -u ftpuser:ftppass -T \"{file1,file2}\" ftp://ftp.testserver.com # Get from stdin and then upload. curl -u ftpuser:ftppass -T - ftp://ftp.testserver.com/myfile_1.txt List/Download Using Ranges $ curl ftp://ftp.uk.debian.org/debian/pool/main/[a-z]/ More information Use -v and -trace to get more information about connection, request and response. Look up words in dict.org # Look up the word bash $ curl dict://dict.org/d:bash # List all avaiable dicts $ curl dict://dict.org/show:db # Look up the word hash in folddoc dict. $ curl dict://dict.org/d:bash:foldoc Set up proxy for CURL Use -x to set up proxy $ curl -x proxysever.test.com:3128 http://google.co.in Store and use cookies # Save cookies into sugarcookies $ curl -D sugarcookies http://localhost/sugarcrm/index.php # Use saved cookie $ curl -b sugarcookies http://localhost/sugarcrm/index.php Transfer request data Use --data/-d to use POST method # GET $ curl -u username https://api.github.com/user?access_token=XXXXXXXXXX # POST $ curl -u username --data \"param1=value1&param2=value\" https://api.github.com # Specify a file as the post data $ curl --data @filename https://github.api.com/authorizations Use --data-urlencode to escape specific characters. curl -d \"value%201\" http://hostname.com curl --data-urlencode \"value 1\" http://hostname.com Use -X to specify other protocol method curl -I -X DELETE https://api.github.cim Use --form to transfer form data curl --form \"fileupload=@filename.txt\" http://hostname/resource "},"development/":{"url":"development/","title":"Development","keywords":"","body":"Development "},"development/git.html":{"url":"development/git.html","title":"Git","keywords":"","body":"Git "},"development/change_the_author_information_of_past_commits.html":{"url":"development/change_the_author_information_of_past_commits.html","title":"Change the author information of past commits","keywords":"","body":"Change the author information of past commits Using --amend for the very last commit $ git commit --amend --author=\"ufonion \" Using interactive rebase Start interactive rebase $ git rebase -i -p 0ad14fa5 Mark with \"edit\" for each commits which are the change targets. pick d7893a8 Version: 0.2.0 edit 21d5600 fix scripts' mod pick 4d0ca9e almost done edit 3dd4753 0.4.0 pick fa455a7 ver 0.4.1 pick 6e1197f 0.5.0 pick 2a86a8f 0.5.1 pick d30b456 0.5.2 Change the author of the target commits one by one $ git commit --amend --author=\"ufonion \" --no-edit $ git rebase --continue Using git filter-branch $ git filter-branch --env-filter ' WRONG_EMAIL=\"wrong_user@wrong_email_server.com\" NEW_NAME=\"ufonion\" NEW_EMAIL=\"mayongcong@gmail.com\" if [ \"$GIT_COMMITTER_EMAIL\" = \"$WRONG_EMAIL\" ] then export GIT_COMMITTER_NAME=\"$NEW_NAME\" export GIT_COMMITTER_EMAIL=\"$NEW_EMAIL\" fi if [ \"$GIT_AUTHOR_EMAIL\" = \"$WRONG_EMAIL\" ] then export GIT_AUTHOR_NAME=\"$NEW_NAME\" export GIT_AUTHOR_EMAIL=\"$NEW_EMAIL\" fi ' --tag-name-filter cat -- --branches --tags "},"development/installation.html":{"url":"development/installation.html","title":"Installation","keywords":"","body":"Installation Enable Windows Subsystem for Linux Open PowerShell as Administrator and run: PS C:\\Users\\User> dism.exe /online /enable-feature /featurename:Microsoft-Windows-Subsystem-Linux /all /norestart Check requirements for running WSL 2 For x64 systems: Version 1903 or higher, with Build 18362 or higher. If not, please use Windows Update or download and run Windows Update Assistant . Enable Virtual Machine feature Open PowerShell as Administrator and run: PS C:\\Users\\User> dism.exe /online /enable-feature /featurename:VirtualMachinePlatform /all /norestart Download the Linux kernel update package Download and install WSL2 Linux kernel update package for x64 machines Set WSL 2 as your default version PS C:\\Users\\User> wsl --set-default-version 2 Install Ubuntu 18.04 LTS Install it from Windows Store Install Docker Service Follow the instructions here and install docker service in WSL. After installation, as systemd is not enabled in WSL, please start the docker by running as below. $ sudo service docker start Install Docker Desktop for Windows Follow the instructions here. Please pay attention about the Windows system type (Pro/Enterprise/Home, etc.). The Windows 10 Home is quite different from others. "},"linux/clear_up_legacy_kernels.html":{"url":"linux/clear_up_legacy_kernels.html","title":"Clean up legacy kernels","keywords":"","body":"Clean up legacy kernels Check current kernel version $ uname -a Check which kernels have been installed $ dpkg --get-selections | grep linux Remove legacy kernels $ sudo apt-get remove linux-image-*.*.*-** $ sudo apt-get remove linux-headers-*.*.*-** "},"linux/clean_up_packages.html":{"url":"linux/clean_up_packages.html","title":"Clean up packages","keywords":"","body":"Clean up packages Remove remnant configuration $ dpkg --list | grep \"^rc\" $ dpkg --list | grep \"^rc\" | cut -d \" \" -f 3 $ dpkg --list | grep \"^rc\" | cut -d \" \" -f 3 | xargs sudo dpkg --purge Remove orphan packages $ sudo apt-get install deborphan $ deborphan | xargs sudo apt-get purge -y Remove obselote packages $ sudo aptitude search ?obsolete $ sudo aptitude purge ~o Remove log files $ sudo apt-get install ncdu $ sudo ncdu /var/log Disk Occupation GUI $ baobab Remove high-capacity packages $ sudo apt-get install debian-goodies $ dpigs -H "}}